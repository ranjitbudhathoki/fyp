// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  githubId        String?   @unique
  username        String?   @unique
  displayName     String?
  bio             String?
  gender          String?
  preferredGender String?
  birthDate       DateTime?
  photoUrl        String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
  posts           Post[]
  comments        Comment[]
  matches1        Match[]   @relation(name: "user1")
  matches2        Match[]   @relation(name: "user2")
  msgSender       Message[] @relation(name: "sender")
  receiver        Message[] @relation(name: "receiver")
}

model Post {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  title        String
  body         String?
  tech_stack   String[]
  project_link String?
  comments     Comment[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Feed {
  id   Int    @id @default(autoincrement())
  Like Like[]
}

model Like {
  id     Int  @id @default(autoincrement())
  feed   Feed @relation(fields: [feedId], references: [id])
  feedId Int
}

model Match {
  id      Int       @id @default(autoincrement())
  user1   User      @relation("user1", fields: [userId1], references: [id])
  userId1 String
  user2   User      @relation("user2", fields: [userId2], references: [id])
  userId2 String
  Message Message[]
}

model Message {
  id         Int    @id @default(autoincrement())
  match      Match  @relation(fields: [matchId], references: [id])
  matchId    Int
  sender     User   @relation("sender", fields: [senderId], references: [id])
  senderId   String
  receiver   User   @relation("receiver", fields: [receiverId], references: [id])
  receiverId String
}
